name: Promote Gravitee API

on:
  workflow_dispatch:
    inputs:
      api_id:
        description: "API ID to promote (must be a valid UUID)"
        required: true
      source_env_id:
        description: "Source Environment ID"
        default: "DEFAULT"
      target_env_id:
        description: "Target Environment ID"
        default: "e6993ff7-02d0-4c14-993f-f702d04c14f9"

env:
  GRAVITEE_API_URL: "https://demo-apim-api.geoff.gravitee.xyz"
  ORG_ID: "DEFAULT"

jobs:
  promote-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate inputs
        run: |
          echo "Validating inputs..."
          echo "API ID: ${{ github.event.inputs.api_id }}"
          echo "Source Env: ${{ github.event.inputs.source_env_id }}"
          echo "Target Env: ${{ github.event.inputs.target_env_id }}"

          if [[ ! "${{ github.event.inputs.api_id }}" =~ ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$ ]]; then
            echo "❌ Error: Invalid API ID format - must be a valid UUID"
            exit 1
          fi

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install -y jq

      - name: Promote API
        run: |
          echo "🚀 Starting API promotion from ${{ github.event.inputs.source_env_id }} to ${{ github.event.inputs.target_env_id }}"

          # Create promotion payload
          cat > payload.json <<EOF
{
  "targetEnvId": "${{ github.event.inputs.target_env_id }}",
  "targetEnvName": "Production",
  "targetEnvCockpitId": "${{ github.event.inputs.target_env_id }}",
  "withPolicies": true,
  "withPlans": true
}
EOF

          echo "📦 Promotion payload:"
          cat payload.json

          # Make API promotion request
          RESPONSE=$(curl -s -w "\nHTTPSTATUS:%{http_code}" \
            -X POST \
            "$GRAVITEE_API_URL/management/organizations/$ORG_ID/environments/${{ github.event.inputs.source_env_id }}/apis/${{ github.event.inputs.api_id }}/_promote" \
            -H "Authorization: Bearer ${{ secrets.GRAVITEE_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data @payload.json)

          # Parse response
          HTTP_STATUS=$(echo "$RESPONSE" | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          BODY=$(echo "$RESPONSE" | sed -e 's/HTTPSTATUS:.*//g')

          echo "🔧 Response Status: $HTTP_STATUS"
          echo "📄 Response Body:"
          echo "$BODY" | jq || echo "$BODY"

          # Check for errors
          if [ "$HTTP_STATUS" -ge 400 ]; then
            echo "❌ Error: API promotion failed with status $HTTP_STATUS"
            exit 1
          else
            echo "✅ Success: API promoted successfully"
          fi

          # Clean up
          rm -f payload.json
